lapply(list.of.packages, require, character.only = TRUE)
}
list.of.packages=c("lme4", "magrittr", "dplyr", "simr", "broom.mixed", "purrr",
"rprojroot")
{
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
}
# Unstandardizing the coefficients
mRecConf_coef_st = tidy(mRecConf,
effects = "fixed",
conf.int = FALSE)
mRecConf_sd_all = dRecYear1 %>%
dplyr::select(Confidence) %>%
map(sd) %>%
stack() %>%
dplyr::rename(sd = values)
mRecConf_coef_st_unst = mRecConf_coef_st  %>%
inner_join(., mRecConf_sd_all, by = c("term" = "ind") ) %>%
mutate_at( .vars = vars(estimate),
.funs = list(~round( ./sd, 4) ) ) %>%
dplyr::select(-effect, -(std.error:p.value), -sd)
# unstandardized log-odds
mRecConf_coef_st_unst_log_odds = 1 - exp(mRecConf_coef_st_unst$estimate)
# from log-odds to probability
mRecConf_confProba = -(plogis(mRecConf_coef_st_unst_log_odds))
## We lower the fixed main effect to a probability of -0.3%
odds = -(0.3/(1-0.3))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=10, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
summary(mRecConf)
plogis(mRecConf)
library(broom.mixed)
dd <- dRecYear1[,-c(1,2)]
## find (and drop) examples with no variation
uu <- apply(dd,2,function(x) length(unique(na.omit(x))))
modList <- apply(dd[,uu>1],2,mRecConf)
models = function(x)
{mRecConf}
library(broom.mixed)
dd <- dRecYear1[,-c(1,2)]
## find (and drop) examples with no variation
uu <- apply(dd,2,function(x) length(unique(na.omit(x))))
modList <- apply(dd[,uu>1],2,mRecConf)
models = function(x)
{
mRecConf = glmer(Reception ~ Confidence + Judgment + Veracity*Theme +
(1|Subject), data=dRecYear1, family='binomial'(link='logit'))
return(mRecConf)
}
library(broom.mixed)
dd <- dRecYear1[,-c(1,2)]
## find (and drop) examples with no variation
uu <- apply(dd,2,function(x) length(unique(na.omit(x))))
modList <- apply(dd[,uu>1],2,mRecConf)
models = function(x)
{
mRecConf = glmer(Reception ~ Confidence + Judgment + Veracity*Theme +
(1|Subject), data=dRecYear1, family='binomial'(link='logit'))
return(mRecConf)
}
library(broom.mixed)
dd <- dRecYear1[,-c(1,2)]
## find (and drop) examples with no variation
uu <- apply(dd,2,function(x) length(unique(na.omit(x))))
modList <- apply(dd[,uu>1],2,models)
remove(dd)
remove(uu)
remove(modList)
remove(mmodels)
remove(models)
cc = coef(mRecConf)
plogis(cc["(Confidence)"])
cc
cc["Confidence"]
cc["(Confidence)"]
cc["(Intercept)"]
cc[`(Intercept)`]
cc[`(Confidence)`]
cc[`Confidence`]
cc[Confidence]
cc
cc$Subject
cc$Subject$Confidence
plogis(cc$Subject$Confidence)
coef(mRecConf)
fixef(mRecConf$)
fixef(mRecConf)
plogis(fixef(mRecConf))
fixef
plogis(fixef(mRecConf))
plogis(fixef(mRecConf$Confidence))
plogis(fixef(mRecConf[Confidence]))
fixef(mRecConf)
fixef(mRecConf["Confidence"])
fixef(mRecConf["(Confidence)"])
fixef(mRecConf$(Intercept)
fixef(mRecConf$(Intercept))
fixef(mRecConf)[1:2]
fixef(mRecConf)[2]
plogis(fixef(mRecConf)[2])
plogis(-fixef(mRecConf)[2])
plogis(0.4)
plogis(-0.4)
mRecConf_coef_st_unst_log_odds
mRecConf_coef_st
mRecConf_sd_all
mRecConf_coef_st_unst
mRecConf_coef_st_unst
mRecConf_coef_st_unst
mRecConf_confProba = plogis(mRecConf_coef_st_unst)
mRecConf_coef_st_unst
mRecConf_confProba = plogis(mRecConf_coef_st_unst$estimate)
mRecConf_confProba
plogis(-mRecConf_coef_st_unst$estimate)
mRecConf_confProba
mRecConf_coef_st_unst
mRecConf_sd_all = dRecYear1 %>%
dplyr::select(Intercept, Confidence) %>%
map(sd) %>%
stack() %>%
dplyr::rename(sd = values)
mRecConf_coef_st_unst
mRecConf_coef_st_unst = mRecConf_coef_st  %>%
inner_join(., mRecConf_sd_all, by = c("term" = "ind") ) %>%
mutate_at( is.numeric,
list(~round(./sd, 4))) %>%
dplyr::select(-effect, -(std.error:p.value), -sd)
mRecConf_coef_st
mRecConf_coef_st_unst = mRecConf_coef_st  %>%
inner_join(., mRecConf_sd_all, by = c("term" = "ind") )
mRecConf_coef_st_unst
mRecConf_coef_st  %>%
inner_join(., mRecConf_sd_all)
mRecConf_coef_st  %>%
cross_join(., mRecConf_sd_all)
mRecConf_coef_st_unst = mRecConf_coef_st  %>%
cross_join(., mRecConf_sd_all) %>%
mutate_at( .vars = vars(estimate),
.funs = list(~round( ./sd, 4) ) ) %>%
dplyr::select(-effect, -(std.error:p.value), -sd)
mRecConf_coef_st_unst
mRecConf_coef_st
mRecConf_sd_all
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memory and report the memory usage
list.of.packages=c("lme4", "magrittr", "dplyr", "simr", "broom.mixed", "purrr",
"rprojroot")
{
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
}
##### VARIABLES #####
set.seed(12345)
project_root = find_rstudio_root_file()
dRec <- read.csv(paste(project_root,"/data/processed/receivingNews_data.csv", sep=""))
source(paste(project_root,"/scripts/src/utility/ReceivingNews_analysis_utility.R", sep=""))
dRec = rename_variables(dRec)
dRec = mutate_values(dRec)
dRec = mutate_types(dRec)
#dRec = rescale_variables(dRec)
# create a subset for the first wave
dRecYear1 = subset(dRec, Year==2020)
mSuccessConf = glmer(Success ~ Confidence +
(1|Subject), data=dRecYear1, family='binomial'(link='logit'))
summary(mSuccessConf)
mSuccessConf_fixed = mSuccessConf
mSuccessConf_fixed_extended <- extend(mSuccessConf_fixed, along="Subject", n=250)
# We show the curve of power for main effect of confidence:
pc_mSuccessConf_extended  <- powerCurve(mSuccessConf_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_mSuccessConf_extended)
pc_mSuccessConf_extended $errors
pc_mSuccessConf_extended $warnings
pc_mSuccessConf_extended
## We remove the sociodemoraphics to lower computation time:
mRecConf = glmer(Reception ~ Confidence + Judgment + Veracity*Theme +
(1|Subject), data=dRecYear1, family='binomial'(link='logit'))
summary(mRecConf)
mRecConf_fixed = mRecConf
mRecConf_fixed_extended <- extend(mRecConf_fixed, along="Subject", n=250)
mRecConf_fixed = mRecConf
mRecConf_fixed_extended <- extend(mRecConf_fixed, along="Subject", n=250)
# We show the curve of power for main effect of confidence:
pc_mRecConf_extended  <- powerCurve(mRecConf_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=10, alpha=.05, progress=TRUE)
plot(pc_mRecConf_extended)
pc_mRecConf_extended $errors
pc_mRecConf_extended $warnings
pc_mRecConf_extended
# Computation time is <45mins, power is 99% starting at 80 subjects
summary(mRecConf)
plogis(mRecConf)
plogis(fixef(mRecConf))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = range)
library(emmeans)
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = range)
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, c(0, 0.01, 0.02))))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, c(0, 0.01, 0.02)))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) centile(x, c(0, 0.01, 0.02)))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, c(0, 1, 2)))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, c(0, 0.1, 0.2)))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, c(0, 0.05, 0.2)))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, probs = c(0, 0.01, 0.02)))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, probs = c(0, 0.1, 0.2)))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, probs = seq(0,1)))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, probs = seq(0,1, length.out=11)))
53-45.8
7.2/2
45.8-42.2
(53-20.8)/10
(53-20.8)/11
(53-20.8)/10
plogis(fixef(mRecConf))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, probs = seq(0,1, length.out=11)))
53-3.6
plogis(fixef(mRecConf))
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, probs = seq(0,1, length.out=11)))
summary(mRecConf)
plogis(fixef(mRecConf))
mRecConf
summary(mRecConf)
plogis(5.03)
exp(mRecConf)
exp(fixef(mRecConf))
exp(fixef(mRecConf$Confidence))
exp(fixef(mRecConf["Confidence"]))
cc = fixef(mRecConf)
cc$["Confidence"]
cc["Confidence"]
exp(cc["Confidence"])
exp(cc["(Intercept)"])
plogis(fixef(mRecConf))
plogis(cc["(Intercept)"])
exp(cc["Confidence"])
1 - exp(cc["Confidence"])
emmeans(mRecConf,~Confidence,type = "response", cov.reduce = function(x) quantile(x, probs = seq(0,1, length.out=11)))
log(1)
log(0.99)
1 - exp(cc["Confidence"])
(1 - exp(cc["Confidence"]))*100
(new_decrease_in_points)/100
new_decrease_in_points = 1
(new_decrease_in_points)/100
log(1- (new_decrease_in_points/100))
new_log_odds
new_decrease_in_points = 1
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2_fixed = mRecConf2
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=10, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
pc_RecConf2_fixed_extended$errors
pc_RecConf2_fixed_extended$warnings
plot(pc_RecConf2_fixed_extended)
mRecConf2
new_decrease_in_points = 1.45/2
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=10, alpha=.05, progress=TRUE)
new_decrease_in_points
new_log_odds
new_decrease_in_points = 1.45/2
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=10, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
plot(pc_mSuccessConf_extended)
cc_Success = fixef(mSuccessConf)
remove(cc)
cc_Rec = fixef(mRecConf)
# intercept proba is 51.24%
plogis(cc_Rec["(Intercept)"])
# Each increase in confidence decreases the odds by 1.45 pt (as given by odds ratio)
1 - exp(cc_Rec["Confidence"])
cc_Success = fixef(mSuccessConf)
# intercept proba is 51.24%
plogis(cc_Success["(Intercept)"])
# Each increase in confidence decreases the odds by 1.45 pt (as given by odds ratio)
1 - exp(cc_Success["Confidence"])
0.001505128*100
new_decrease_in_points = 0.15*2
new_log_odds = log(1- (new_decrease_in_points/100))
new_log_odds
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=10, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
pc_RecConf2_fixed_extended$errors
pc_RecConf2_fixed_extended$warnings
new_decrease_in_points = 1
new_log_odds = log(1- (new_decrease_in_points/100))
new_log_odds
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
pc_RecConf2_fixed_extended$errors
pc_RecConf2_fixed_extended$warnings
plot(pc_RecConf2_fixed_extended)
new_decrease_in_points = 0.15*3
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
pc_RecConf2_fixed_extended
new_decrease_in_points = 0.15*3
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
new_decrease_in_points = 0.15*5
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
## We increase the fixed main effect to a decrease of odds equal to 0.3pt
new_decrease_in_points = 0.15*3
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
pc_RecConf2_fixed_extended$errors
pc_RecConf2_fixed_extended$warnings
pc_RecConf2_fixed_extended
save.image("C:/Users/vguigon/Desktop/Research_directory/receivingNews/R_environments/ReceivingNews2-Confidence_power_simulation_env.RData")
1.45/3
plot(pc_RecConf2_fixed_extended)
plot(pc_RecConf2_fixed_extended)
cc_Success = fixef(mSuccessConf)
# intercept proba is 49.65%
plogis(cc_Success["(Intercept)"])
# Each increase in confidence decreases the odds by 0.15 pt (as given by odds ratio)
1 - exp(cc_Success["Confidence"])
## We increase the fixed main effect to a decrease of odds equal to 0.45pt
new_decrease_in_points = 0.15*3
new_log_odds = log(1- (new_decrease_in_points/100))
mSuccessConf2 = mSuccessConf
fixef(mSuccessConf2)['Confidence'] <- new_log_odds
mSuccessConf2_fixed = mSuccessConf2
mSuccessConf2_fixed_extended <- extend(mSuccessConf2_fixed, along="Subject", n=250)
pc_SuccessConf2_fixed_extended <- powerCurve(mSuccessConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_SuccessConf2_fixed_extended)
pc_SuccessConf2_fixed_extended$errors
pc_SuccessConf2_fixed_extended$warnings
pc_SuccessConf2_fixed_extended
plot(pc_SuccessConf2_fixed_extended)
new_decrease_in_points = 0.15*2
new_log_odds = log(1- (new_decrease_in_points/100))
mSuccessConf2 = mSuccessConf
fixef(mSuccessConf2)['Confidence'] <- new_log_odds
mSuccessConf2_fixed = mSuccessConf2
mSuccessConf2_fixed_extended <- extend(mSuccessConf2_fixed, along="Subject", n=250)
pc_SuccessConf2_fixed_extended <- powerCurve(mSuccessConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
## SUCCESS
##### SIMULATIONS FROM FIRST WAVE: lighter model, current fixef #####
## We remove the sociodemoraphics to lower computation time:
mSuccessConf = glmer(Success ~ Confidence +
(1|Subject), data=dRecYear1, family='binomial'(link='logit'))
cc_Success = fixef(mSuccessConf)
# intercept proba is 49.65%
plogis(cc_Success["(Intercept)"])
# Each increase in confidence decreases the odds by 0.15 pt (as given by odds ratio)
1 - exp(cc_Success["Confidence"])
## We increase the fixed main effect to a decrease of odds equal to 0.45pt
new_decrease_in_points = 0.15*2
new_log_odds = log(1- (new_decrease_in_points/100))
mSuccessConf2 = mSuccessConf
fixef(mSuccessConf2)['Confidence'] <- new_log_odds
mSuccessConf2_fixed = mSuccessConf2
mSuccessConf2_fixed_extended <- extend(mSuccessConf2_fixed, along="Subject", n=250)
pc_SuccessConf2_fixed_extended <- powerCurve(mSuccessConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_SuccessConf2_fixed_extended)
plot(pc_SuccessConf2_fixed_extended)
pc_SuccessConf2_fixed_extended
mRecConf = glmer(Reception ~ Confidence + Judgment + Veracity*Theme +
(1|Subject), data=dRecYear1, family='binomial'(link='logit'))
summary(mRecConf)
mRecConf_fixed = mRecConf
mRecConf_fixed_extended <- extend(mRecConf_fixed, along="Subject", n=250)
# We show the curve of power for main effect of confidence:
pc_mRecConf_extended  <- powerCurve(mRecConf_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_mRecConf_extended)
pc_mRecConf_extended $errors
pc_mRecConf_extended $warnings
pc_mRecConf_extended
# Computation time is <45mins, power is 99% starting at 80 subjects
save.image("C:/Users/vguigon/Desktop/Research_directory/receivingNews/R_environments/ReceivingNews2-Confidence_power_simulation_env.RData")
cc_Rec = fixef(mRecConf)
# intercept proba is 51.24%
plogis(cc_Rec["(Intercept)"])
# Each increase in confidence decreases the odds by 1.45 pt (as given by odds ratio)
1 - exp(cc_Rec["Confidence"])
## We lower the fixed main effect to a decrease of odds equal to 1pt
new_decrease_in_points = 1.45/2
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
pc_RecConf2_fixed_extended$errors
pc_RecConf2_fixed_extended$warnings
pc_RecConf2_fixed_extended
new_decrease_in_points = 1.45/3
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
pc_RecConf2_fixed_extended$errors
pc_RecConf2_fixed_extended$warnings
pc_RecConf2_fixed_extended
load("C:/Users/vguigon/Desktop/Research_directory/receivingNews/R_environments/ReceivingNews2-Confidence_power_simulation_env.RData")
plot(pc_RecConf2_fixed_extended)
mRecConf2_fixed
-0.00451*3
new_decrease_in_points = 1.45/2
new_log_odds = log(1- (new_decrease_in_points/100))
mRecConf2 = mRecConf
fixef(mRecConf2)['Confidence'] <- new_log_odds
mRecConf2_fixed = mRecConf2
mRecConf2_fixed_extended <- extend(mRecConf2_fixed, along="Subject", n=250)
pc_RecConf2_fixed_extended <- powerCurve(mRecConf2_fixed_extended, test=fixed("Confidence"), along="Subject",
breaks=c(80,150,200,250), nsim=100, alpha=.05, progress=TRUE)
plot(pc_RecConf2_fixed_extended)
save.image("C:/Users/vguigon/Desktop/Research_directory/receivingNews/R_environments/ReceivingNews2-Confidence_power_simulation_env.RData")
mRecConf2_fixed
load("C:/Users/vguigon/Desktop/Research_directory/receivingNews/R_environments/ReceivingNews-Mixed_Linear_Models_alternatives_rand2_env.RData")
summary(mRecEcology)
summary(mRecDemocracy)
summary(mRecSocjust)
summary(mRecAllthemes)
summary(mRecAllthemes2)
summary(mRecSocioDemo)
summary(mRecDistrust)
summary(mRecEcology)
summary(mRecSocioDemo)
summary(mRecRT)
summary(mRecDistrust)
summary(mRecDistrustEco)
summary(mRecDistrustDemo)
summary(mRecDistrustSocJust)
summary(mRec_judgment_ambig)
summary(mRec_truth_ambig)
rm(list = ls(all.names = TRUE)) #will clear all ofbjects includes hidden objects.
gc() #free up memory and report the memory usage
list.of.packages <- c("ggplot2", "sjPlot", "tidyverse", "ggpubr","RColorBrewer",
"rprojroot", "patchwork")
{
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
}
# Free memory
rm(list = ls(all.names = TRUE)) #will clear all ofbjects includes hidden objects.
gc() #free up memory and report the memory usage
list.of.packages <- c("ggplot2", "sjPlot", "tidyverse", "ggpubr","RColorBrewer",
"rprojroot", "patchwork")
{
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
}
