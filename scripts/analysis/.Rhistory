model_3hCauchy2 <- "model {
for (j in 1:ncountries) {
mu_j[j] ~ dnorm(mu, sInter)  }
mu ~ dunif(100,250)
sInter ~ dt(mu, 1/(sigma^2), 1)
for (i in 1:nindiv) {
size[i] ~ dnorm(mu_j[numcountry[i]], sIntra)  }
sIntra ~ dt(mu, 1/(sigma^2), 1) } "
data4JAGS <- list(size=size, numcountry=numcountry, ncountries=ncountries, nindiv=nindiv)
data4JAGShCauchy1 <- list(size=size, numcountry=numcountry, ncountries=ncountries, nindiv=nindiv, sigma=5)
data4JAGShCauchy2 <- list(size=size, numcountry=numcountry, ncountries=ncountries, nindiv=nindiv, sigma=10)
modeljags_3Unif1 <- jags.model(file=textConnection(model_3Unif1), data=data4JAGS, n.chains=3)
modeljags_3Unif2 <- jags.model(file=textConnection(model_3Unif2), data=data4JAGS, n.chains=3)
modeljags_3hCauchy1 <- jags.model(file=textConnection(model_3hCauchy1), data=data4JAGShCauchy1, n.chains=3)
modeljags_3hCauchy2 <- jags.model(file=textConnection(model_3hCauchy2), data=data4JAGShCauchy2, n.chains=3)
update(modeljags_3Unif1,50000)
update(modeljags_3Unif2,50000)
update(modeljags_3hCauchy1,50000)
update(modeljags_3hCauchy2,50000)
mcmc_3Unif1 <- coda.samples(modeljags_3Unif1, c("size"), n.iter=10000, thin=3)
mcmc_3Unif2 <- coda.samples(modeljags_3Unif1, c("size"), n.iter=10000, thin=3)
mcmc_3hCauchy1 <- coda.samples(modeljags_3hCauchy1, c("size"), n.iter=10000, thin=3)
mcmc_3hCauchy2 <- coda.samples(modeljags_3hCauchy1, c("size"), n.iter=10000, thin=3)
save.image("C:/Users/vguigon/Dropbox (Personal)/Cursus/Divers/Formations/LBBE 2022/workspace_LBBE2022.RData")
mcmc_3_Unif1_tot <-as.data.frame(as.matrix(mcmc_3Unif1))
mcmc_3_Unif2_tot <-as.data.frame(as.matrix(mcmc_3Unif2))
mcmc_3_hCauchy1_tot <-as.data.frame(as.matrix(mcmc_3hCauchy1))
mcmc_3_hCauchy2_tot <-as.data.frame(as.matrix(mcmc_3hCauchy2))
save.image("C:/Users/vguigon/Dropbox (Personal)/Cursus/Divers/Formations/LBBE 2022/workspace_LBBE2022.RData")
hist(mcmc_3_Unif1_tot)
hist(mcmc_3_Unif1_tot,col=rgb(0,0,1,0.5), freq = F)
data <- read.table("C:/Users/vguigon/Dropbox (Personal)/Cursus/Divers/Formations/LBBE 2022/seance8/dataNPP2.txt", header = TRUE)
d <- list(m = c(1, 0.1, 0.01), nplus = c(2, 1, 0), r = 3)
View(data)
d$r
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] ~ 1-exp(-m[k]*conc)
}
conc ~ dunif(10^-6,10^-3)
} "
data4JAGS <- list(r = d$r, m = d$m)
init = list(list(conc = 10^-4.5), list(conc = 10^-4), list(conc = 10^-5.5))
init = list(list(conc = 10^-4.5), list(conc = 10^-4), list(conc = 10^-5.5))
modeljags1 <- jags.model(file=textConnection(model1), data=data4JAGS, n.chains=3)
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
conc ~ dunif(10^-6,10^-3)
} "
data4JAGS <- list(r = d$r, m = d$m)
init = list(list(conc = 10^-4.5), list(conc = 10^-4), list(conc = 10^-5.5))
modeljags1 <- jags.model(file=textConnection(model1), data=data4JAGS, n.chains=3)
update(modeljags1,10000)
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
conc = log(a)
a ~ dunif(10^-6,10^3)
} "
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
conc = log(a)
a ~ dunif(10^-6,10^3)
} "
data4JAGS <- list(r = d$r, m = d$m)
init = list(list(a = 10^-4.5), list(a = 10^-4), list(a = 10^-5.5))
modeljags1 <- jags.model(file=textConnection(model1), data=data4JAGS, n.chains=3)
update(modeljags1,10000)
mcmc1 <- coda.samples(modeljags1, c("size"), n.iter=10000, thin=3)
mcmc1 <- coda.samples(modeljags1, c("conc"), n.iter=10000, thin=3)
mcmc1$conc
View(mcmc1)
mcmc1
modeljags1 <- jags.model(file=textConnection(model1), data=data4JAGS, n.chains=3)
update(modeljags1,12000)
mcmc1 <- coda.samples(modeljags1, c("conc"), n.iter=50000, thin=1)
summary(mcmc1)
plot(mcmc1)
gelman.diag(mcmc1)
gelman.plot(mcmc1)
autocorr.plot(mcmc1)
# autocorr.plot(mcmc1)
effectiveSize(mcmc1)
raftery.diag(mcmc1)
mcmc_3_tot <-as.data.frame(as.matrix(mcmc1))
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
conc = 10^a
a ~ dunif(-6,3)
} "
data4JAGS <- list(r = d$r, m = d$m)
init = list(list(a = 10^-4.5), list(a = 10^-4), list(a = 10^-5.5))
modeljags1 <- jags.model(file=textConnection(model1), data=data4JAGS, n.chains=3)
update(modeljags1,12000)
mcmc1 <- coda.samples(modeljags1, c("conc"), n.iter=50000, thin=1)
summary(mcmc1)
plot(mcmc1)
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
conc = 10^a
a ~ dunif(-6,3)
} "
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
conc = 10^a
a ~ dunif(-6,3)
} "
data4JAGS <- list(r = d$r, m = d$m)
init = list(list(a = -1.5), list(a = 2), list(a = -5.5))
modeljags1 <- jags.model(file=textConnection(model1), data=data4JAGS, n.chains=3)
update(modeljags1,12000)
mcmc1 <- coda.samples(modeljags1, c("conc"), n.iter=50000, thin=1)
summary(mcmc1)
plot(mcmc1)
plot(mcmc1)
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
conc = 10^a
a ~ dunif(-6,3)
} "
data4JAGS <- list(r = d$r, m = d$m)
init = list(list(a = -1.5), list(a = 2), list(a = -5.5))
model1 <- "model {
for (k in 1:r) {
nplus[k] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
conc = 10^a
a ~ dunif(-6,3)
} "
data4JAGS <- list(r = d$r, m = d$m, nplus = d$nplus)
init = list(list(a = -1.5), list(a = 2), list(a = -5.5))
modeljags1 <- jags.model(file=textConnection(model1), data=data4JAGS, n.chains=3)
update(modeljags1,12000)
mcmc1 <- coda.samples(modeljags1, c("conc"), n.iter=50000, thin=1)
summary(mcmc1)
plot(mcmc1)
gelman.diag(mcmc1)
gelman.plot(mcmc1)
# autocorr.plot(mcmc1)
effectiveSize(mcmc1)
raftery.diag(mcmc1)
nplus <- read.table("C:/Users/vguigon/Dropbox (Personal)/Cursus/Divers/Formations/LBBE 2022/seance8/dataNPP2.txt", header = TRUE)
(dcomplet <- list(m = c(1, 0.1, 0.01), nplus = nplus, r = 3, N = 50))
nplus <- read.table("C:/Users/vguigon/Dropbox (Personal)/Cursus/Divers/Formations/LBBE 2022/seance8/dataNPP2.txt")
(dcomplet <- list(m = c(1, 0.1, 0.01), nplus = nplus, r = 3, N = 50))
hist(mcmc1)
hist(mcmc1[[1]])
mean(mcmc1[[1]])
median(mcmc1[[1]])
post = sort(mcmc1)
summary(mcmc1)
mcmc1_tot = as.data.frame(as.matrix(mcmc1))
hist(mcmc1_tot)
hist(mcmc1_tot[1])
hist(mcmc1_tot[[1]])
summary(mcmc1_tot)
model2_1 <- "model {
for (k in 1:r) {
conc[k,i] ~ dbinom(pplus[k], r)
pplus[k] = 1-exp(-m[k]*conc)
}
for (i in N){
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(10^mlc, 10^slc)
a ~ dunif(-6,3)
b ~ dunif(0,4)
}
} "
model2_1 <- "model {
for (k in 1:r) {
conc[k,i] ~ dbinom(pplus[k], r)
pplus[k,i] = 1-exp(-m[k]*conc)
}
for (i in N){
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(10^mlc, 10^slc)
a ~ dunif(-6,3)
b ~ dunif(0,4)
}
} "
data4JAGS <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init = list(list(a = -1.5,b = 1), list(a = 2,b = 3), list(a = -5.5,b = 0))
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(a = -1.5,b = 1), list(a = 2,b = 3), list(a = -5.5,b = 0))
model2_1 <- "model {
for (k in 1:r) {
conc[k,i] ~ dbinom(pplus[k], r)
pplus[k,i] = 1-exp(-m[k]*conc)
}
for (i in N){
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(10^mlc, 10^slc)
a ~ dunif(-6,3)
b ~ dunif(0,4)
}
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(a = -1.5,b = 1), list(a = 2,b = 3), list(a = -5.5,b = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
model2_1 <- "model {
for (k in 1:r) {
conc[k,i] ~ dbinom(pplus[k], r)
pplus[k,i] = 1-exp(-m[k]*conc)
}
for (i in 1:N){
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(10^mlc, 10^slc)
a ~ dunif(-6,3)
b ~ dunif(0,4)
}
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(a = -1.5,b = 1), list(a = 2,b = 3), list(a = -5.5,b = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
model2_1 <- "model {
for (k in 1:r) {
conc[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = 1-exp(-m[k]*conc)
}
for (i in 1:N){
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(10^mlc, 10^slc)
a ~ dunif(-6,3)
b ~ dunif(0,4)
}
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(a = -1.5,b = 1), list(a = 2,b = 3), list(a = -5.5,b = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
model2_1 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = 1-exp(-m[k]*conc)
}
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(10^mlc, 10^slc)
a ~ dunif(-6,3)
b ~ dunif(0,4)
}
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(a = -1.5,b = 1), list(a = 2,b = 3), list(a = -5.5,b = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
model2_1 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = 1-exp(-m[k]*conc)
}
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(10^mlc, 10^slc)
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
}
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(a = -1.5,b = 1), list(a = 2,b = 3), list(a = -5.5,b = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
init2_1 = list(list(mlc = -1.5,slc = 1), list(mlc = 2,slc = 3), list(mlc = -5.5,slc = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
model2_1 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = 1-exp(-m[k]*conc)
}
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(mlc, slc)
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
}
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(mlc = -1.5,slc = 1), list(mlc = 2,slc = 3), list(mlc = -5.5,slc = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
model2_1 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = 1-exp(-m[k]*conc)
}
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(mlc, slc)
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
}
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(mlc = -1.5,slc = 1), list(mlc = 2,slc = 3), list(mlc = -5.5,slc = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
model2_1 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = 1-exp(-m[k]*conc[i])
}
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(mlc, slc)
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
}
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(mlc = -1.5,slc = 1), list(mlc = 2,slc = 3), list(mlc = -5.5,slc = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
model2_1 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = 1-exp(-m[k]*conc[i])
}
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(mlc, slc)
}
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(mlc = -1.5,slc = 1), list(mlc = 2,slc = 3), list(mlc = -5.5,slc = 0))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
init2_1 = list(list(mlc = -1.5,slc = 1), list(mlc = 2,slc = 3), list(mlc = -5.5,slc = 0.5))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
dcomplet$nplus
model2_1 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = 1-exp(-m[k]*conc[i])
}
conc[i] = 10^logconc[i]
logconc[i] ~ dnorm(mlc, slc)
}
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
} "
data4JAGS2_1 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
init2_1 = list(list(mlc = -1.5,slc = 1), list(mlc = 2,slc = 3), list(mlc = -3,slc = 0.5))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
init2_1 = list(list(mlc = -0.5,slc = 1), list(mlc = 0.5,slc = 1), list(mlc = -1,slc = 0.5))
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
update(modeljags2_1,12000)
update(modeljags2_1,100000)
update(modeljags2_1,50000)
update(modeljags2_1,10000)
mcmc2_1 <- coda.samples(modeljags2_1, c("conc"), n.iter=50000, thin=2)
mcmc2_1 <- coda.samples(modeljags2_1, c("conc"), n.iter=20000, thin=2)
mcmc2_1 <- coda.samples(modeljags2_1, c("conc"), n.iter=20000, thin=2)
mcmc2_1 <- coda.samples(modeljags2_1, c("conc"), n.iter=20000, thin=2)
mcmc2_1 <- coda.samples(modeljags2_1, c("conc"), n.iter=1000, thin=2)
modeljags2_1 <- jags.model(file=textConnection(model2_1), data=data4JAGS2_1, inits=init2_1, n.chains=3)
update(modeljags2_1,10000)
mcmc2_1 <- coda.samples(modeljags2_1, c("conc"), n.iter=10000, thin=2)
summary(mcmc2_1)
plot(mcmc2_1)
model2_2 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = max(1-exp(-m[k]*conc[i], 0.0000001)
}
conc[i] = 10^logconc[i]*contam[i]
logconc[i] ~ dnorm(mlc, slc)
}
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
pv ~ dunif(0,1)
contam[i] ~ dbern(pv)
} "
data4JAGS2_2 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
#init2_2 = list(list(mlc = -0.5,slc = 1), list(mlc = 0.5,slc = 1), list(mlc = -1,slc = 0.5))
modeljags2_2 <- jags.model(file=textConnection(model2_2), data=data4JAGS2_2, n.chains=3)
model2_2 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = max(1-exp(-m[k]*conc[i], 0.0000001)
}
conc[i] = 10^logconc[i]*contam[i]
logconc[i] ~ dnorm(mlc, slc)
contam[i] ~ dbern(pv)
}
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
pv ~ dunif(0,1)
} "
data4JAGS2_2 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
#init2_2 = list(list(mlc = -0.5,slc = 1), list(mlc = 0.5,slc = 1), list(mlc = -1,slc = 0.5))
modeljags2_2 <- jags.model(file=textConnection(model2_2), data=data4JAGS2_2, n.chains=3)
model2_2 <- "model {
for (i in 1:N){
for (k in 1:r) {
nplus[k,i] ~ dbinom(pplus[k,i], r)
pplus[k,i] = max(1-exp(-m[k]*conc[i]), 0.0000001)}
conc[i] = 10^logconc[i]*contam[i]
logconc[i] ~ dnorm(mlc, slc)
contam[i] ~ dbern(pv)
}
mlc ~ dunif(-6,3)
slc ~ dunif(0,4)
pv ~ dunif(0,1)
} "
data4JAGS2_2 <- list(r = dcomplet$r, m = dcomplet$m, nplus = dcomplet$nplus, N = dcomplet$N)
#init2_2 = list(list(mlc = -0.5,slc = 1), list(mlc = 0.5,slc = 1), list(mlc = -1,slc = 0.5))
modeljags2_2 <- jags.model(file=textConnection(model2_2), data=data4JAGS2_2, n.chains=3)
update(modeljags2_2,10000)
mcmc2_2 <- coda.samples(modeljags2_2, c("conc"), n.iter=10000, thin=2)
load("C:/Users/vguigon/Desktop/Research_directory/receivingNews/outputs/analyses/ReceivingNews2-power_simulation_env.RData")
load("C:/Users/vguigon/Desktop/Research_directory/receivingNews/outputs/analyses/ReceivingNews2-power_simulation_env.RData")
save.image(paste(project_root_root, "/outputs/analyses"), file="ReceivingNews2-power_simulation_env.RData")
save.image(paste(project_root, "/outputs/analyses"), file="ReceivingNews2-power_simulation_env.RData")
paste(project_root, "/outputs/analyses")
(paste(project_root, "/outputs/analyses",sep="")
)
save.image(paste(project_root, "/outputs/analyses",sep=""), file="ReceivingNews2-power_simulation_env.RData")
save.image(paste(project_root, "/outputs/analyses/"ReceivingNews2-power_simulation_env.RData"",sep="")
save.image(paste(project_root, "/outputs/analyses/ReceivingNews2-power_simulation_env.RData",sep=""))
load("C:/Users/vguigon/Desktop/Research_directory/receivingNews/outputs/analyses/ReceivingNews2-power_simulation_env.RData")
remove(demo)
remove(ecol)
remove(just)
save.image(paste(project_root, "/outputs/analyses/ReceivingNews2-power_simulation_env.RData",sep=""))
project_root = 'C:/Users/vguigon/Desktop/Research_directory/receivingNews'
setwd(paste(project_root,"/data/processed", sep=""))
load(paste(project_root,"outputs/analyses/ReceivingNews2-power_simulation_env.RData", sep=""))
project_root = 'C:/Users/vguigon/Desktop/Research_directory/receivingNews'
setwd(paste(project_root,"/data/processed", sep=""))
knitr::opts_knit$set(root.dir = paste(project_root,"/data/processed", sep=""))
project_root = 'C:/Users/vguigon/Desktop/Research_directory/receivingNews'
load(paste(project_root,"outputs/analyses/ReceivingNews2-power_simulation_env.RData", sep=""))
project_root = 'C:/Users/vguigon/Desktop/Research_directory/receivingNews'
load(paste(project_root,"/outputs/analyses/ReceivingNews2-power_simulation_env.RData", sep=""))
ps_mSuccessAmbig
exp(coef(summary(mSuccessAmbig)))
mSuccessAmbig
summary(mSuccessAmbig$Imprecision)
coef(summary(mSuccessAmbig))
test=summary(mSuccessAmbig)
summary(mSuccessAmbig)$coefficients
summary(mSuccessAmbig)$coefficients[2,2]
summary(mSuccessAmbig)$coefficients[3,1]
remove(test)
exp(summary(mSuccessAmbig)$coefficients[3,1])
ps_mSuccessAmbig
install.packages('evaluate')
install.packages("evaluate")
install.pacakges('sass')
install.packages('sass')
library('sass')
library('evaluate')
knitr::opts_knit$set(root.dir = paste(project_root,"/data/processed", sep=""))
project_root = 'C:/Users/vguigon/Desktop/Research_directory/receivingNews'
load(paste(project_root,"/outputs/analyses/ReceivingNews2-power_simulation_env.RData", sep=""))
ps_mSuccessAmbig
getwd()
setwd("C:/Users/vguigon/Desktop/Research_directory/receivingNews/scripts/analysis")
getwd()
ezknit(file = "ReceivingNews2-power_simulation_notebook.Rmd", out_dir = paste(project_root,"/outputs/analyses", sep="")))
ezknit(file = "ReceivingNews2-power_simulation_notebook.Rmd", out_dir = paste(project_root,"/outputs/analyses", sep=""))
list.of.packages <- c("ezknitr") #for easy knitting
lapply(list.of.packages, require, character.only = TRUE)
{
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
}
ezknit(file = "ReceivingNews2-power_simulation_notebook.Rmd", out_dir = paste(project_root,"/outputs/analyses", sep=""))
ezknit(file = "ReceivingNews2-power_simulation-notebook.Rmd", out_dir = paste(project_root,"/outputs/analyses", sep=""))
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memory and report the memory usage
# Set the working directory to Source File Location:
# Session -> Set Working Directory -> To Source File Location
project_root = "../.."
knitr::opts_knit$set(root.dir = paste(project_root,"/outputs/analyses", sep=""))
# load packages
list.of.packages <- c("ezknitr") #for easy knitting
lapply(list.of.packages, require, character.only = TRUE)
{
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
}
# To knit the document, do:
# ezknit(file = "ReceivingNews2-power_simulation-notebook.Rmd", out_dir = paste(project_root,"/outputs/analyses", sep=""))
load(paste(project_root,"/outputs/analyses/ReceivingNews2-power_simulation_env.RData", sep=""))
ezknit(file = "ReceivingNews2-power_simulation-notebook.Rmd", out_dir = paste(project_root,"/outputs/analyses", sep=""))
ezknit(file = "ReceivingNews2-power_simulation-notebook.Rmd", out_dir = paste(project_root,"/outputs/analyses", sep=""))
getwd()
install.packages("renv")
